name: CI

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  checks: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: '-C debuginfo=line-tables-only -C incremental=false'

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.changes.outputs.code }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@master
      id: changes
      with:
        predicate-quantifier: 'every'
        filters: |
          code:
            - '**'
            - '!**.md'
            - '!docs/**'
            - '!.claude/**'
            - '!.gitignore'
            - '!.justfile'
            - '!LICENSE'

  check:
    name: Check
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.code == 'true'
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy

    - name: Install Rust nightly (for formatting)
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt

    - name: Check formatting
      run: cargo +nightly fmt -- --check

    - name: Run clippy
      run: cargo +stable clippy --all-features --all-targets -- -D warnings

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.code == 'true'
    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov

    - name: Generate code coverage
      run: |
        cargo llvm-cov --features test-utils --workspace --lcov --output-path lcov.info \
         --ignore-filename-regex "(clickhouse-arrow-derive|errors|error_codes|examples|test-utils).*"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: lcov.info
        fail_ci_if_error: true
        disable_telem: true

  test-nightly:
    name: Test nightly
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.code == 'true'
    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: nightly

    - name: Build
      run: cargo +nightly build --all-features --verbose

    - name: Run tests
      run: cargo +nightly test --features test-utils --verbose

    # TODO: Convert doc test to tests and reenable
    # - name: Run doc tests
    #   run: cargo +nightly test --doc --all-features


  # Summary job that branch protection can depend on
  ci-success:
    name: CI Success
    needs: [changes, test-nightly, coverage]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check if all jobs succeeded
        run: |
          # If only docs changed, that's success
          if [[ "${{ needs.changes.outputs.code }}" == "false" ]]; then
            echo "Documentation-only change âœ…"
            exit 0
          fi

          if [[ "${{ needs.test-nightly.result }}" != "success" ||
                "${{ needs.coverage.result }}" != "success" ]]; then
            echo "One or more jobs failed"
            exit 1
          fi
          echo "All CI jobs passed successfully!"
